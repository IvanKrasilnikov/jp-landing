// --- *** COMPONENTS FROM BOWER *** -------------------------------------------
@import "../../bower_components/bourbon/app/assets/stylesheets/bourbon";
@import "../../bower_components/breakpoint-sass/stylesheets/breakpoint";
@import "../../bower_components/susy/sass/susy";
// -----------------------------------------------------------------------------

// --- BOURBON SETTINGS --------------------------------------------------------
$asset-pipeline: false;//false

$em-base: 16px;//16px

$prefix-for-webkit:    false;//true
$prefix-for-mozilla:   false;//true
$prefix-for-microsoft: false;//true
$prefix-for-opera:     false;//true
$prefix-for-spec:      false;//true
// -----------------------------------------------------------------------------

// --- SUSY SETTINGS -----------------------------------------------------------
$susy: (
  // Направление отображения
  flow: ltr,//ltr opt:ltr|rtl
  // span внутри container, но не содержимого span.

  // Тип сетки
  math: fluid,//fluid opt:fluid|static
  // Гибкие(в %) или статические(ширина указывается явно в column-width).

  // Тип отображения
  output: float,//float opt:float|isolate
  // isolate - добавляет margin на случай, если колонка абсолютно
  //позиционирована (не стоит применять глобально).

  // Положение gutter
  gutter-position: after,//after opt:before|after|split|inside|inside-static
  // gutters создаются через margin к колонкам перед(before), после(after),
  //с обеих сторон по половине(split), как padding с обеих сторон
  //по половине(inside), статический padding с обеих сторон(inside-static
  //применять только для статических значений колонок).

  // Ширина container
  container: auto,//auto opt: любые допустимые значения ширины
  // При auto равна 100%

  // Позиция container
  container-position: center,//center opt:left|center|right|<length>[*2]
  // Позиционируется через margin. При указании одного статического
  //значения - добавляет с двух сторон одинаковые указанные margin, двух -
  //левый и правый соответственно.

  // Количество колонок.
  columns: 12,//4 opt: число|список(list) - (1 2 3 2 1)
  // Список - для работы с асиметричными сетками (не стоит применять глобально).

  // Ширина gutter.
  gutters: 0.25,//1/4 opt: 0.25, 20px/80px...
  // Нельзя задавать фиксированные значения, только отношение к ширине колонки.

  // Ширина колонки
  column-width: false,//false opt:false/null|любые допустимые значения ширины
  // false/null - для автоматического расчёта в гибких сетках. Явное значение
  //работает в гибких и в статических сетках.

  // Значение свойства box-sizing
  global-box-sizing: content-box,//content-box opt:border-box|content-box
  // Не работает, лучше указать непосредственно в свойстве через селектор *.

  // Направление последнего элемента
  last-flow: to,//to opt:from|to
  // Значение свойства float у последнего элемента в ряду.

  debug: (
    // Сетка для дебага
    image: hide,//hide opt:show|hide|show-columns|show-baseline
    // Показывает базовую линию при использовании переменной $base-line-height
    //из Compass Vertical Rhythm

    // Цвет сетки
    color: rgba(#66f, 0.25),//rgba(#66f, 0.25)

    // Кнопка сетки для дебага
    output: background,//background opt:background|overlay
    // overlay - показывать кнопку

    // Позиция кнопки для дебага
    toggle: top right,//top right
  ),

  // Использование внешних модулей в работе Susy
  use-custom: (
    background-image: true,//true
    background-options: false,//false

    // Лучше использовать универсальный селектор.
    box-sizing: false,//true

    // Берёт из Bourbon
    clearfix: true,//false

    // Берёт из Compass значения $rhythm-unit и $rem-with-px-fallback
    rem: false,
  )
);
// -----------------------------------------------------------------------------

// --- *** SASS PROJECT COMPONENTS *** -----------------------------------------

@import "variables";

// base|reset|normalize|typography
@import "base/base";

// @import "utils/"
@import "utils/mixins";

//@import "layout/";
@import "layout/reveal";
@import "layout/wrapper";

//@import "../BLOCKS/";
//@import "../BLOCKS/about/about";
@import "../BLOCKS/arguments/arguments";
@import "../BLOCKS/contacts/contacts";
//@import "../BLOCKS/episodes/episodes";
@import "../BLOCKS/examples/examples";
@import "../BLOCKS/first-view/first-view";
@import "../BLOCKS/footer/footer";
@import "../BLOCKS/map/map";
@import "../BLOCKS/modal-call/modal-call";
@import "../BLOCKS/modal-offer/modal-offer";
@import "../BLOCKS/modal-price/modal-price";
@import "../BLOCKS/price/price";
@import "../BLOCKS/see/see";
@import "../BLOCKS/sensation/sensation";
@import "../BLOCKS/side-nav/side-nav";
@import "../BLOCKS/to-action/to-action";
@import "../BLOCKS/to-home/to-home";
@import "../BLOCKS/unprecedented/unprecedented";
@import "../BLOCKS/work/work";

// -----------------------------------------------------------------------------





