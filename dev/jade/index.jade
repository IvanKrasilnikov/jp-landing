include ../../node_modules/bemto.jade/bemto

doctype
html(lang="ru")
  head
    meta(charset="UTF-8")
    meta(http-equiv="X-UA-Compatible" content="IE=edge")
    meta(name="viewport" content="width=480")
    title jp-landing
    
    link(rel="stylesheet" href="https://fonts.googleapis.com/css?family=Open+Sans:400,300&subset=latin,cyrillic")
    link(rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons")
    link(rel="stylesheet" href="css/vendors/materialize/materialize.css")
    link(rel="stylesheet" href="css/vendors/viewbox.css")
    link(rel="stylesheet" href="css/vendors/jquery.mCustomScrollbar.css")
    link(rel="stylesheet" href="css/vendors/slick/slick.css")
    link(rel="stylesheet" href="css/vendors/slick/slick-theme.css")
    link(rel="stylesheet" href="css/main.css")
    
  body
    
    include ../BLOCKS/first-view/first-view
    include ../BLOCKS/unprecedented/unprecedented
    include ../BLOCKS/see/see
    include ../BLOCKS/map/map
    include ../BLOCKS/work/work
    include ../BLOCKS/sensation/sensation
    include ../BLOCKS/examples/examples
    include ../BLOCKS/price/price
    include ../BLOCKS/arguments/arguments
    //include ../BLOCKS/episodes/episodes
    //include ../BLOCKS/about/about
    include ../BLOCKS/to-action/to-action
    include ../BLOCKS/contacts/contacts
    include ../BLOCKS/footer/footer
    
    include ../BLOCKS/to-home/to-home
    include ../BLOCKS/side-nav/side-nav
    include ../BLOCKS/modal-offer/modal-offer
    include ../BLOCKS/modal-call/modal-call
    include ../BLOCKS/modal-price/modal-price
    
    script(src="js/vendors/jquery-2.1.1.min.js")
    script(src="js/vendors/materialize.min.js")
    script(src="js/vendors/jquery.viewbox.min.js")
    script(src="js/vendors/jquery.mCustomScrollbar.concat.min.js")
    script(src="js/vendors/scrollreveal.min.js")
    script(src="js/vendors/slick.min.js")
    script(src="js/vendors/jquery.maskedinput.min.js")
    script(src="js/vendors/countUp.min.js")
    script.
      var breakpointNoneHor = 767, breakpointShowVert = 100;
      $(document).scroll(function() {
        if (document.documentElement.clientWidth > breakpointNoneHor &&
           window.pageYOffset > breakpointShowVert) {
           $("#toHome").show(200);
        } else {
          $("#toHome").hide(200);
        }
      });
      $(window).resize(function() {
        if (document.documentElement.clientWidth < breakpointNoneHor) {
          $("#toHome").hide(200);
        } else {
          if (window.pageYOffset > breakpointShowVert) {
            $("#toHome").show(200);
          } else {
            $("#toHome").hide(200);
          }
        }
      });
      $("#toHome").click(function() {
        $("html, body").animate({scrollTop: 0}, 1000);
      });
    script.
      $(document).ready(function() {
        $('.modal-trigger').leanModal();
        window.sr = ScrollReveal().reveal('.reveal', {
          duration: 700,
          easing: 'ease-out',
          beforeReveal: function (domEl) {
            if ($(domEl).hasClass('sensation')) {
              var sensation = new countUp($('.sensation__square')[0], 0, 800, 0, 5, {
                useEasing: true
              });
              sensation.start();
              $('.sensation__square').addClass('sensation__square_color');
            } else if ($(domEl).hasClass('unprecedented')) {
              $('.unprecedented__text').addClass('unprecedented__text_view');
              $('.unprecedented__img').addClass('unprecedented__img_view');
            } else if ($(domEl).hasClass('see')) {
              $('.see__card').addClass('see__card_view');
            } else if ($(domEl).hasClass('examples')) {
              $('.examples__card').addClass('examples__card_view');
            } else if ($(domEl).hasClass('arguments')) {
              $('.arguments__card').addClass('arguments__card_view');
            } else if ($(domEl).hasClass('work')) {
              $('.work__card').addClass('work__card_view');
            }
          }
        });
        $('#modal-call-phone').mask('+7(999) 999-99-99');
        $('.first-view__menu').sideNav({
          edge: 'right'
        });
        $('.first-view__next').click(function(e) {
          scrollTo('.unprecedented');
        });
        $('.carousel').carousel({
          dist: -50
        });  
        $('.price__text').mCustomScrollbar({
          theme: 'dark'
        });
        $('.to-action__slider').slick({
          slidesToShow: 3,
          infinite: true,
          autoplay: true,
          responsive: [
            {
              breakpoint: 991,
              settings: {
                slidesToShow: 2,
                autoplay: false
              }
            },
            {
              breakpoint: 479,
              settings: {
                slidesToShow: 1,
                autoplay: false
              }
            }
          ]
        });
        $('.to-action__slider-item').viewbox();
        $('.examples__card').viewbox();
      });
      function scrollTo(elem) {
        $('html, body').animate({scrollTop: $(elem).offset().top}, 1000);
      }
    script.
      $('.price__sale-button').click(function(e) {
        var curElem = $(e.target).parents('.price__card').find('.price__card-title').text();
        $('.modal-price__name').text(curElem);
        $('.modal-price [type="hidden"]').val(curElem);
      });
    script.
      var map;
      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          center: {lat: 49, lng: 0},
          zoom: 3,
          scrollwheel: false,
          disableDefaultUI: true,
          styles: [
            {
              "featureType": "administrative.country",
              "elementType": "geometry.stroke",
              "stylers": [
                { "color": "#ffffff" }
              ]
            },{
              "featureType": "water",
              "stylers": [
                { "color": "#ffffff" }
              ]
            },{
              "featureType": "water",
              "elementType": "labels",
              "stylers": [
                { "visibility": "off" }
              ]
            },{
              "featureType": "administrative.country",
              "elementType": "labels",
              "stylers": [
                { "visibility": "off" }
              ]
            },{
              "featureType": "landscape.natural",
              "stylers": [
                { "color": "#c1c1c1" }
              ]
            },{
              "featureType": "administrative.locality",
              "stylers": [
                { "visibility": "off" }
              ]
            },
            {
              "featureType": "administrative.province",
              "stylers": [
                { "visibility": "off" }
              ]
            }
          ]
        });
        
        newMarker('hongkong', 'hongkongInfo', 'Гонконг', {lat: 22.359, lng: 113.86});
        newMarker('sp', 'spInfo', 'Санкт-Петербург', {lat: 59.917, lng: 30.044});
        newMarker('oslo', 'osloInfo', 'Осло', {lat: 59.893, lng: 10.645});
        newMarker('moscow', 'moscowInfo', 'Москва', {lat: 55.749, lng: 37.072});
        newMarker('london', 'londonInfo', 'Лондон', {lat: 51.528, lng: -0.24});
        newMarker('rome', 'romeInfo', 'Рим', {lat: 41.91, lng: 12.395});
        newMarker('paris', 'parisInfo', 'Париж', {lat: 48.858, lng: 2.277});
        newMarker('madrid', 'madridInfo', 'Мадрид', {lat: 40.438, lng: -3.819});
        newMarker('prague', 'pragueInfo', 'Прага', {lat: 50.059, lng: 14.325});
        newMarker('berlin', 'berlinInfo', 'Берлин', {lat: 52.507, lng: 12.145});
        newMarker('stambul', 'stambulInfo', 'Стамбул', {lat: 41.005, lng: 28.731});
        newMarker('astana', 'astanaInfo', 'Астана', {lat: 51.148, lng: 71.05});
        newMarker('pekin', 'pekinInfo', 'Пекин', {lat: 39.939, lng: 116.117});
        newMarker('barselona', 'barselonaInfo', 'Барселона', {lat: 41.394, lng: 2.078});
        newMarker('kair', 'kairInfo', 'Каир', {lat: 30.123, lng: 31.302});
        newMarker('ottawa', 'ottawaInfo', 'Оттава', {lat: 45.25, lng: -76.08});
        newMarker('la', 'laInfo', 'Лос-Анджелес', {lat: 34.02, lng: -118.69});
        newMarker('ny', 'nyInfo', 'Нью-Йорк', {lat: 40.705, lng: -74.118});
        newMarker('reik', 'reikInfo', 'Рейкьявик', {lat: 64.132, lng: -21.922});
        newMarker('rio', 'rioInfo', 'Рио-де-Жанейро', {lat: -22.91, lng: -43.728});
        newMarker('cape', 'capeInfo', 'Кейптаун', {lat: -33.913, lng: 18.375});
        newMarker('deli', 'deliInfo', 'Нью-Дели', {lat: 28.692, lng: 76.951});
        newMarker('sidney', 'sidneyInfo', 'Сидней', {lat: -33.847, lng: 150.651});
        newMarker('tokio', 'tokioInfo', 'Токио', {lat: 35.673, lng: 139.57});
        newMarker('milan', 'milanInfo', 'Милан', {lat: 45.462, lng: 9.107});
        newMarker('amsterdam', 'amsterdamInfo', 'Амстердам', {lat: 52.374, lng: 4.758});
        newMarker('buda', 'budaInfo', 'Будапешт', {lat: 47.481, lng: 18.99});
        newMarker('stokholm', 'stokholmInfo', 'Стокгольм', {lat: 59.326, lng: 17.847});
        newMarker('mexico', 'mexicoInfo', 'Мехико', {lat: 19.391, lng: -99.283});
        newMarker('tunis', 'tunisInfo', 'Тунис', {lat: 36.794, lng: 10.073});
        newMarker('tbilisi', 'tbilisiInfo', 'Тбилиси', {lat: 41.732, lng: 44.698});
        newMarker('dubai', 'dubaiInfo', 'Дубай', {lat: 25.074, lng: 54.947});
        newMarker('dakar', 'dakarInfo', 'Дакар', {lat: 14.732, lng: -17.458});
        newMarker('novosib', 'novosibInfo', 'Новосибирск', {lat: 54.97, lng: 82.809});
        newMarker('krasno', 'krasnoInfo', 'Красноярск', {lat: 56.026, lng: 92.725});
        newMarker('marra', 'marraInfo', 'Марракеш', {lat: 31.634, lng: -8.077});
        newMarker('liss', 'lissInfo', 'Лиссабон', {lat: 38.743, lng: -9.23});
        newMarker('varsh', 'varshInfo', 'Варшава', {lat: 52.233, lng: 20.781});
        newMarker('kopen', 'kopenInfo', 'Копенгаген', {lat: 55.671, lng: 12.49});
        newMarker('riga', 'rigaInfo', 'Рига', {lat: 56.971, lng: 23.85});
        newMarker('helsinki', 'helsinkiInfo', 'Хельсинки', {lat: 60.164, lng: 24.76});
        newMarker('minsk', 'minskInfo', 'Минск', {lat: 53.884, lng: 27.454});
        newMarker('kiev', 'kievInfo', 'Киев', {lat: 50.402, lng: 30.252});
        newMarker('kish', 'kishInfo', 'Кишенёв', {lat: 47, lng: 28.718});
        newMarker('afin', 'afinInfo', 'Афины', {lat: 37.99, lng: 23.668});
        newMarker('skopie', 'skopieInfo', 'Скопье', {lat: 41.999, lng: 21.354});
        newMarker('tripoli', 'tripoliInfo', 'Триполи', {lat: 32.883, lng: 13.153});
        newMarker('akkra', 'akkraInfo', 'Аккра', {lat: 5.591, lng: -0.249});
        newMarker('niamei', 'niameiInfo', 'Ниамей', {lat: 13.512, lng: 2.048});
        newMarker('damask', 'damaskInfo', 'Дамаск', {lat: 33.512, lng: 36.193});
        newMarker('asmara', 'asmaraInfo', 'Асмэра', {lat: 15.325, lng: 38.846});
        newMarker('tashkent', 'tashkentInfo', 'Ташкент', {lat: 41.282, lng: 69.139});
        newMarker('katmandu', 'katmanduInfo', 'Катманду', {lat: 27.709, lng: 85.291});
        newMarker('bangkok', 'bangkokInfo', 'Бангкок', {lat: 13.725, lng: 100.352});
        newMarker('havana', 'havanaInfo', 'Гавана', {lat: 23.05, lng: -82.472});
        newMarker('santa', 'santaInfo', 'Санта-Доминго', {lat: 18.48, lng: -70.016});
        newMarker('lasvegas', 'lasvegasInfo', 'Лас-Вегас', {lat: 36.147, lng: -115.455});
        newMarker('denver', 'denverInfo', 'Денвер', {lat: 39.764, lng: -104.995});
        newMarker('dallas', 'dallasInfo', 'Даллас', {lat: 32.82, lng: -97.011});
        newMarker('littlerock', 'littlerockInfo', 'Литл-Рок', {lat: 34.724, lng: -92.478});
        newMarker('chicago', 'chicagoInfo', 'Чикаго', {lat: 41.833, lng: -88.012});
        newMarker('atlanta', 'atlantaInfo', 'Атланта', {lat: 33.767, lng: -84.56});
        newMarker('miami', 'miamiInfo', 'Майами', {lat: 25.782, lng: -80.301});
        newMarker('vankouver', 'vankouverInfo', 'Ванкувер', {lat: 49.256, lng: -123.193});
        newMarker('edmonton', 'edmontonInfo', 'Эдмонтон', {lat: 53.555, lng: -113.774});
        newMarker('nook', 'nookInfo', 'Нук', {lat: 64.178, lng: -51.776});
        newMarker('ekat', 'ekatInfo', 'Екатеринбург', {lat: 56.814, lng: 60.514});
        newMarker('nn', 'nnInfo', 'Нижний Новгород', {lat: 56.292, lng: 43.786});
        newMarker('kazan', 'kazanInfo', 'Казань', {lat: 55.795, lng: 48.793});
        newMarker('chel', 'chelInfo', 'Челябинск', {lat: 55.152, lng: 61.128});
        newMarker('samara', 'samaraInfo', 'Самара', {lat: 53.26, lng: 49.917});
        newMarker('omsk', 'omskInfo', 'Омск', {lat: 54.985, lng: 73.075});
        newMarker('rostov', 'rostovInfo', 'Ростов-на-Дону', {lat: 47.22, lng: 39.69});
        newMarker('ufa', 'ufaInfo', 'Уфа', {lat: 54.808, lng: 55.74});
        newMarker('perm', 'permInfo', 'Пермь', {lat: 58.02, lng: 55.954});
        newMarker('voronej', 'voronejInfo', 'Воронеж', {lat: 51.675, lng: 38.955});
        newMarker('volgograd', 'volgogradInfo', 'Волгоград', {lat: 48.67, lng: 44.223});
        
        function newMarker(name, addName, rusName, posObj) {
          var name = new google.maps.Marker({
            position: posObj,
            map: map,
            icon: 'img/point.svg'
          }),
          addName = new google.maps.InfoWindow({
            content: '<h6 class="map__point-text">' + rusName + '</h6>'
          });
          name.addListener('mouseover', function() {
            addName.open(map, name);
          });
          name.addListener('mouseout', function() {
            addName.close(map, name);
          });
        }
      }
    script(async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBj6CFFRwlhWsCgh4e9U0FtnOMWJXbyEHM&callback=initMap")